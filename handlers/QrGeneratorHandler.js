/*
    *   This handler contains the function for generating the QR Code
*/
const os = require('os');// interface for os
const fs = require('fs');// for file system operations
const path = require('path');// for manipulating paths
var QRCode = require('qrcode');// qrcode generator library

const {dialog} = require('electron');

/* 
    *   This function is generates the QR-Code given the id and the name
    * 
    *   Params
    *      event: the event object passed by default of the event
    *         id:   The id generated by mongoose
    *       name:   name of the visitor
    *   }

*/
exports.generateQr = function (event, id, name) {
    qrPath = path.join(os.homedir(), 'Desktop', `${name}-${id}` + ".png");
    QRCode.toFile(qrPath, id, {
        margin: 4,
        errorCorrectionLevel: 'high'
    },
        (err) => {
        if (err) console.log("An error has occured while generating QR-Code: ", err);
        else
            dialog.showMessageBox({message: "QR-Code generated Successfully!", type: "info", title: "QR-Code Generator"})
    });
}

exports.printPage = async function (win){
    let pdfPath;
    
    try {
        let options = 
        {
            marginsType: 1,
            printBackground: true,
            printSelectionOnly: true,
            landscape: true,
            pageSize: 'A4',
            scaleFactor: 100
        }
        let data = await win.webContents.printToPDF(options);
        pdfPath = path.join(os.homedir(), 'Desktop', 'temp.pdf');
        fs.writeFile(pdfPath, data, (error) => {
            if (error) throw error
            console.log(`Wrote PDF successfully to ${pdfPath}`)
        });
    } catch (err) {
        console.log(`Failed to write PDF to ${pdfPath}: `, err)
    }
}
    
